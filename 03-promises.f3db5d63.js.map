{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAEhCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAyB3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUC,UAEtBG,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IA/BPR,EAAOgB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBACN,IACE,IAAIC,EAAI,EAAGC,GAASjB,EAAWkB,MAC/BF,IAAMd,EAAYgB,MAClBF,GAAK,EAAGC,IAAUhB,EAAUiB,MAE5Bf,EAAca,EAAGC,GACdE,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MACjBgB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M,IAGjDoB,OAAM,SAAAL,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MAClBgB,EAAA1B,GAAS2B,OAAOI,QACd,sBAAuCF,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nconst inputFirst = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  for (\n    let i = 1, delay = +inputFirst.value;\n    i <= +inputAmount.value;\n    i += 1, delay += +inputStep.value\n  ) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\n// createPromise(position, delay)\n//   .then(({ position, delay }) => {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputFirst","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","i","delay1","value","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.f3db5d63.js.map"}